--- kernel-untouched/linux-3.19.0/virt/kvm/kvm_main.c	2016-01-14 15:17:52.000000000 -0800
+++ kernel-tlbsplit/linux-3.19.0/virt/kvm/kvm_main.c	2016-01-12 20:16:15.978736807 -0800
@@ -62,6 +62,7 @@
 
 #define CREATE_TRACE_POINTS
 #include <trace/events/kvm.h>
+#include "tlbsplit.h"
 
 MODULE_AUTHOR("Qumranet");
 MODULE_LICENSE("GPL");
@@ -470,6 +471,9 @@ static struct kvm *kvm_create_vm(unsigne
 	if (!kvm->memslots)
 		goto out_err_no_srcu;
 
+	if (!tlb_split_init(kvm))
+		goto out_err_no_srcu;
+
 	/*
 	 * Init kvm generation close to the maximum to easily test the
 	 * code of handling generation number wrap-around.
@@ -610,6 +614,7 @@ static void kvm_destroy_vm(struct kvm *k
 	kvm_arch_destroy_vm(kvm);
 	kvm_destroy_devices(kvm);
 	kvm_free_physmem(kvm);
+        kvm_split_tlb_deactivateall(kvm);
 	cleanup_srcu_struct(&kvm->irq_srcu);
 	cleanup_srcu_struct(&kvm->srcu);
 	kvm_arch_free_vm(kvm);
@@ -3242,6 +3247,7 @@ static int kvm_init_debug(void)
 			goto out_dir;
 	}
 
+	split_init_debugfs();
 	return 0;
 
 out_dir:
@@ -3254,6 +3260,7 @@ static void kvm_exit_debug(void)
 {
 	struct kvm_stats_debugfs_item *p;
 
+	split_shutdown_debugfs();
 	for (p = debugfs_entries; p->name; ++p)
 		debugfs_remove(p->dentry);
 	debugfs_remove(kvm_debugfs_dir);
