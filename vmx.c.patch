--- kernel-untouched/linux-3.19.0/arch/x86/kvm/vmx.c	2016-01-14 15:17:52.000000000 -0800
+++ kernel-tlbsplit/linux-3.19.0/arch/x86/kvm/vmx.c	2016-01-07 17:25:04.032968984 -0800
@@ -46,6 +46,8 @@
 #include <asm/debugreg.h>
 #include <asm/kexec.h>
 
+#include "tlbsplit.h"
+
 #include "trace.h"
 
 #define __ex(x) __kvm_handle_fault_on_reboot(x)
@@ -5355,6 +5357,11 @@
 
 static int handle_vmcall(struct kvm_vcpu *vcpu)
 {
+	if (split_tlb_vmcall_dispatch(vcpu)) {
+		skip_emulated_instruction(vcpu);
+		return 1;
+	}
+
 	skip_emulated_instruction(vcpu);
 	kvm_emulate_hypercall(vcpu);
 	return 1;
@@ -5532,6 +5539,7 @@
 	gpa_t gpa;
 	u32 error_code;
 	int gla_validity;
+	int splitresult;
 
 	exit_qualification = vmcs_readl(EXIT_QUALIFICATION);
 
@@ -5571,7 +5579,10 @@
 
 	vcpu->arch.exit_qualification = exit_qualification;
 
-	return kvm_mmu_page_fault(vcpu, gpa, error_code, NULL, 0);
+	if (split_tlb_handle_ept_violation(vcpu,gpa,exit_qualification,&splitresult))
+		return splitresult;
+	else
+		return kvm_mmu_page_fault(vcpu, gpa, error_code, NULL, 0);
 }
 
 static u64 ept_rsvd_mask(u64 spte, int level)
